>> So far in our series,

we've learned how to
create new ASP.NET

Core web API projects
inside of Visual Studio.

In this video, we'll take
it a step further and

learn how to process those requests
that get sent over to our API,

because what good is an API we
can't process the requests.

The two concepts that we'll learn
about that would allow us to do

this are called Controllers
and Action Methods.

Within the context of ASP.NET Core,

the job of the controller
is to be able to receive

requests that get sent over
that match a particular path.

Within that controller we'll
have various operations

defined that are able to
inspect the requests,

carry out any necessary
business logic,

and then also return a
response back to our client.

These operations are usually
called Action Methods.

Now let's head over to Visual
Studio and see how they work.

We're going to continue working on

that project that we created before.

Two things that you'll
notice is that we've

removed that weather forecast class,

and also, I've deleted

anything that was inside of
that controller's folder.

Now we'll create a new controller

by right-clicking on that folder,

I'm going to select "Add"
and then "Controller."

In the dialog box that pops up,

I'll select "API" and then at the

top I'll select "API
Controller Empty."

The next thing that we need to do

is to give our controller a name.

I'm going to call this
"Recipes controller."

Notice how I have the word
"Controller" appended to the name.

I'm doing that because that's
one of the conventions that

ASP.NET Core uses to
find controllers.

Now I click "Add," and I have
my empty controller here.

The next thing we need to do
is to add an action method.

So I'm going to paste in an action
method that I created before.

This action method simply
returns a list of dishes

and I've added some
of my favorite ones

such as oxtail and dumplings.

Let's hit the "Run" button
and see if it works.

Now that the browser is loaded up,

I'm going to select
that "Get operation."

I'll hit "Tryout" and
then I'll run "Execute."

Inside of the results,

I'm expecting to see

that data that is specified
in my action method.

So there I could see oxtail,

curry chicken and dumplings.

I guess that means

our action method is working
as we expect it to be.

Let's close this and head
back to Visual Studio.

Notice on line 14,

that our action method is
attributed with HttpGet.

That means that it's going to
respond to HttpGet requests.

Also in line 15, see how

our method is actually a fairly
bare borne C-Sharp function.

That means that we didn't
need to do anything

special to be able to
process that request.

Finally, I want you to
take a look at line

10 and notice that route attribute,

it's specifying that our
controller is responsible for

requests that land on

the path api slash and the
name of the controller.

In this case, it'll be api/recipes.

Now you've seen how to
create new controllers and

action methods inside
of ASP.NET Core.

In a future video,
we'll dive a little bit

deeper into routing and see

some other ways that
you can customize

action methods when you're
building your APIs.

[MUSIC]

